{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-file-upload.min.js","webpack:///webpack/bootstrap 08938086fe384e75174a","webpack:///./src/index.js","webpack:///./src/config.json","webpack:///./src/values/options.js","webpack:///./src/services/FileUploader.js","webpack:///./src/services/FileLikeObject.js","webpack:///./src/services/FileItem.js","webpack:///./src/services/FileDirective.js","webpack:///./src/services/FileSelect.js","webpack:///./src/services/FileDrop.js","webpack:///./src/services/FileOver.js","webpack:///./src/directives/FileSelect.js","webpack:///./src/directives/FileDrop.js","webpack:///./src/directives/FileOver.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequire","obj","__esModule","CONFIG","options","serviceFileUploader","serviceFileLikeObject","serviceFileItem","serviceFileDirective","serviceFileSelect","serviceFileDrop","serviceFileOver","directiveFileSelect","directiveFileDrop","directiveFileOver","angular","name","value","directive","run","FileUploader","FileLikeObject","FileItem","FileDirective","FileSelect","FileDrop","FileOver","url","alias","headers","queue","progress","autoUpload","removeAfterUpload","method","filters","formData","queueLimit","Number","MAX_VALUE","withCredentials","_createClass","defineProperties","target","props","key","prop","configurable","writable","Object","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","copy","extend","forEach","isObject","isNumber","isDefined","isArray","element","fileUploaderOptions","$rootScope","$http","$window","File","FormData","settings","isUploading","_nextIndex","_failFilterIndex","_directives","select","drop","over","unshift","fn","_queueLimitFilter","_folderFilter","addToQueue","files","_this","list","isArrayLikeObject","arrayOfFilters","_getFilters","count","length","addedFileItems","some","temp","_isValidFile","fileItem","push","_onAfterAddingFile","filter","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","removeFromQueue","index","getIndexOfItem","item","cancel","splice","_destroy","clearQueue","remove","uploadItem","transport","isHTML5","_prepareToUploading","cancelItem","abort","items","getNotUploadedItems","upload","cancelAll","isFile","constructor","isFileLikeObject","indexOf","isUploaded","getReadyItems","isReady","sort","item1","item2","destroy","object","onAfterAddingAll","fileItems","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","response","status","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","notUploaded","uploaded","ratio","current","Math","round","names","match","$$phase","$apply","size","type","file","every","_isSuccessCode","_transformResponse","headersGetter","_headersGetter","defaults","transformResponse","transformFn","_parseHeaders","val","i","parsed","split","line","slice","trim","toLowerCase","parsedHeaders","_xhrTransport","xhr","_xhr","XMLHttpRequest","form","_onBeforeUploadItem","append","_file","onprogress","event","lengthComputable","total","_onProgressItem","onload","getAllResponseHeaders","gist","_onCompleteItem","onerror","_onErrorItem","onabort","_onCancelItem","open","setRequestHeader","send","_iframeTransport","iframe","Date","now","input","_input","_form","replaceWith","element_","action","enctype","encoding","bind","html","contentDocument","body","innerHTML","e","dummy","_onSuccessItem","unbind","after","submit","_onBeforeUpload","_onProgress","_onSuccess","_onError","_onCancel","_onComplete","nextItem","inherit","source","create","super_","$inject","isElement","isString","fileOrInput","isInput","fakePathOrObject","postfix","_createFromFakePath","path","lastModifiedDate","lastIndexOf","_createFromObject","$compile","uploader","isSuccess","isCancel","isError","_replaceNode","onBeforeUpload","onProgress","onSuccess","onError","onCancel","onComplete","clone","scope","css","_saveLinks","events","_get","get","property","receiver","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","getter","_inherits","subClass","superClass","enumerable","__proto__","_FileDirective","extendedOptions","$destroy","change","removeAttr","getOptions","getFilters","isEmptyAfterSelection","attr","onChange","dragover","dragleave","onDrop","transfer","_getTransfer","_preventAndStop","_removeOverClass","onDragOver","_haveFiles","types","dropEffect","_addOverClass","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","addOverClass","removeOverClass","overClass","addClass","getOverClass","removeClass","$parse","link","attributes","$eval"],"mappings":"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","file":"angular-file-upload.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tvar options = _interopRequire(__webpack_require__(2));\n\t\n\tvar serviceFileUploader = _interopRequire(__webpack_require__(3));\n\t\n\tvar serviceFileLikeObject = _interopRequire(__webpack_require__(4));\n\t\n\tvar serviceFileItem = _interopRequire(__webpack_require__(5));\n\t\n\tvar serviceFileDirective = _interopRequire(__webpack_require__(6));\n\t\n\tvar serviceFileSelect = _interopRequire(__webpack_require__(7));\n\t\n\tvar serviceFileDrop = _interopRequire(__webpack_require__(8));\n\t\n\tvar serviceFileOver = _interopRequire(__webpack_require__(9));\n\t\n\tvar directiveFileSelect = _interopRequire(__webpack_require__(10));\n\t\n\tvar directiveFileDrop = _interopRequire(__webpack_require__(11));\n\t\n\tvar directiveFileOver = _interopRequire(__webpack_require__(12));\n\t\n\tangular.module(CONFIG.name, []).value(\"fileUploaderOptions\", options).factory(\"FileUploader\", serviceFileUploader).factory(\"FileLikeObject\", serviceFileLikeObject).factory(\"FileItem\", serviceFileItem).factory(\"FileDirective\", serviceFileDirective).factory(\"FileSelect\", serviceFileSelect).factory(\"FileDrop\", serviceFileDrop).factory(\"FileOver\", serviceFileOver).directive(\"nvFileSelect\", directiveFileSelect).directive(\"nvFileDrop\", directiveFileDrop).directive(\"nvFileOver\", directiveFileOver).run([\"FileUploader\", \"FileLikeObject\", \"FileItem\", \"FileDirective\", \"FileSelect\", \"FileDrop\", \"FileOver\", function (FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver) {\n\t    // only for compatibility\n\t    FileUploader.FileLikeObject = FileLikeObject;\n\t    FileUploader.FileItem = FileItem;\n\t    FileUploader.FileDirective = FileDirective;\n\t    FileUploader.FileSelect = FileSelect;\n\t    FileUploader.FileDrop = FileDrop;\n\t    FileUploader.FileOver = FileOver;\n\t}]);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"name\": \"angularFileUpload\"\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t    url: \"/\",\n\t    alias: \"file\",\n\t    headers: {},\n\t    queue: [],\n\t    progress: 0,\n\t    autoUpload: false,\n\t    removeAfterUpload: false,\n\t    method: \"POST\",\n\t    filters: [],\n\t    formData: [],\n\t    queueLimit: Number.MAX_VALUE,\n\t    withCredentials: false\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tvar copy = angular.copy;\n\tvar extend = angular.extend;\n\tvar forEach = angular.forEach;\n\tvar isObject = angular.isObject;\n\tvar isNumber = angular.isNumber;\n\tvar isDefined = angular.isDefined;\n\tvar isArray = angular.isArray;\n\tvar element = angular.element;\n\t\n\tmodule.exports = function (fileUploaderOptions, $rootScope, $http, $window, FileLikeObject, FileItem) {\n\t    var File = $window.File;\n\t    var FormData = $window.FormData;\n\t\n\t    var FileUploader = (function () {\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Creates an instance of FileUploader\n\t         * @param {Object} [options]\n\t         * @constructor\n\t         */\n\t\n\t        function FileUploader(options) {\n\t            _classCallCheck(this, FileUploader);\n\t\n\t            var settings = copy(fileUploaderOptions);\n\t\n\t            extend(this, settings, options, {\n\t                isUploading: false,\n\t                _nextIndex: 0,\n\t                _failFilterIndex: -1,\n\t                _directives: { select: [], drop: [], over: [] }\n\t            });\n\t\n\t            // add default filters\n\t            this.filters.unshift({ name: \"queueLimit\", fn: this._queueLimitFilter });\n\t            this.filters.unshift({ name: \"folder\", fn: this._folderFilter });\n\t        }\n\t\n\t        _createClass(FileUploader, {\n\t            addToQueue: {\n\t                /**\n\t                 * Adds items to the queue\n\t                 * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n\t                 * @param {Object} [options]\n\t                 * @param {Array<Function>|String} filters\n\t                 */\n\t\n\t                value: function addToQueue(files, options, filters) {\n\t                    var _this = this;\n\t\n\t                    var list = this.isArrayLikeObject(files) ? files : [files];\n\t                    var arrayOfFilters = this._getFilters(filters);\n\t                    var count = this.queue.length;\n\t                    var addedFileItems = [];\n\t\n\t                    forEach(list, function (some /*{File|HTMLInputElement|Object}*/) {\n\t                        var temp = new FileLikeObject(some);\n\t\n\t                        if (_this._isValidFile(temp, arrayOfFilters, options)) {\n\t                            var fileItem = new FileItem(_this, some, options);\n\t                            addedFileItems.push(fileItem);\n\t                            _this.queue.push(fileItem);\n\t                            _this._onAfterAddingFile(fileItem);\n\t                        } else {\n\t                            var filter = arrayOfFilters[_this._failFilterIndex];\n\t                            _this._onWhenAddingFileFailed(temp, filter, options);\n\t                        }\n\t                    });\n\t\n\t                    if (this.queue.length !== count) {\n\t                        this._onAfterAddingAll(addedFileItems);\n\t                        this.progress = this._getTotalProgress();\n\t                    }\n\t\n\t                    this._render();\n\t                    if (this.autoUpload) this.uploadAll();\n\t                }\n\t            },\n\t            removeFromQueue: {\n\t                /**\n\t                 * Remove items from the queue. Remove last: index = -1\n\t                 * @param {FileItem|Number} value\n\t                 */\n\t\n\t                value: function removeFromQueue(value) {\n\t                    var index = this.getIndexOfItem(value);\n\t                    var item = this.queue[index];\n\t                    if (item.isUploading) item.cancel();\n\t                    this.queue.splice(index, 1);\n\t                    item._destroy();\n\t                    this.progress = this._getTotalProgress();\n\t                }\n\t            },\n\t            clearQueue: {\n\t                /**\n\t                 * Clears the queue\n\t                 */\n\t\n\t                value: function clearQueue() {\n\t                    while (this.queue.length) {\n\t                        this.queue[0].remove();\n\t                    }\n\t                    this.progress = 0;\n\t                }\n\t            },\n\t            uploadItem: {\n\t                /**\n\t                 * Uploads a item from the queue\n\t                 * @param {FileItem|Number} value\n\t                 */\n\t\n\t                value: function uploadItem(value) {\n\t                    var index = this.getIndexOfItem(value);\n\t                    var item = this.queue[index];\n\t                    var transport = this.isHTML5 ? \"_xhrTransport\" : \"_iframeTransport\";\n\t\n\t                    item._prepareToUploading();\n\t                    if (this.isUploading) {\n\t                        return;\n\t                    }this.isUploading = true;\n\t                    this[transport](item);\n\t                }\n\t            },\n\t            cancelItem: {\n\t                /**\n\t                 * Cancels uploading of item from the queue\n\t                 * @param {FileItem|Number} value\n\t                 */\n\t\n\t                value: function cancelItem(value) {\n\t                    var index = this.getIndexOfItem(value);\n\t                    var item = this.queue[index];\n\t                    var prop = this.isHTML5 ? \"_xhr\" : \"_form\";\n\t                    if (item && item.isUploading) item[prop].abort();\n\t                }\n\t            },\n\t            uploadAll: {\n\t                /**\n\t                 * Uploads all not uploaded items of queue\n\t                 */\n\t\n\t                value: function uploadAll() {\n\t                    var items = this.getNotUploadedItems().filter(function (item) {\n\t                        return !item.isUploading;\n\t                    });\n\t                    if (!items.length) {\n\t                        return;\n\t                    }forEach(items, function (item) {\n\t                        return item._prepareToUploading();\n\t                    });\n\t                    items[0].upload();\n\t                }\n\t            },\n\t            cancelAll: {\n\t                /**\n\t                 * Cancels all uploads\n\t                 */\n\t\n\t                value: function cancelAll() {\n\t                    var items = this.getNotUploadedItems();\n\t                    forEach(items, function (item) {\n\t                        return item.cancel();\n\t                    });\n\t                }\n\t            },\n\t            isFile: {\n\t                /**\n\t                 * Returns \"true\" if value an instance of File\n\t                 * @param {*} value\n\t                 * @returns {Boolean}\n\t                 * @private\n\t                 */\n\t\n\t                value: function isFile(value) {\n\t                    return this.constructor.isFile(value);\n\t                }\n\t            },\n\t            isFileLikeObject: {\n\t                /**\n\t                 * Returns \"true\" if value an instance of FileLikeObject\n\t                 * @param {*} value\n\t                 * @returns {Boolean}\n\t                 * @private\n\t                 */\n\t\n\t                value: function isFileLikeObject(value) {\n\t                    return this.constructor.isFileLikeObject(value);\n\t                }\n\t            },\n\t            isArrayLikeObject: {\n\t                /**\n\t                 * Returns \"true\" if value is array like object\n\t                 * @param {*} value\n\t                 * @returns {Boolean}\n\t                 */\n\t\n\t                value: function isArrayLikeObject(value) {\n\t                    return this.constructor.isArrayLikeObject(value);\n\t                }\n\t            },\n\t            getIndexOfItem: {\n\t                /**\n\t                 * Returns a index of item from the queue\n\t                 * @param {Item|Number} value\n\t                 * @returns {Number}\n\t                 */\n\t\n\t                value: function getIndexOfItem(value) {\n\t                    return isNumber(value) ? value : this.queue.indexOf(value);\n\t                }\n\t            },\n\t            getNotUploadedItems: {\n\t                /**\n\t                 * Returns not uploaded items\n\t                 * @returns {Array}\n\t                 */\n\t\n\t                value: function getNotUploadedItems() {\n\t                    return this.queue.filter(function (item) {\n\t                        return !item.isUploaded;\n\t                    });\n\t                }\n\t            },\n\t            getReadyItems: {\n\t                /**\n\t                 * Returns items ready for upload\n\t                 * @returns {Array}\n\t                 */\n\t\n\t                value: function getReadyItems() {\n\t                    return this.queue.filter(function (item) {\n\t                        return item.isReady && !item.isUploading;\n\t                    }).sort(function (item1, item2) {\n\t                        return item1.index - item2.index;\n\t                    });\n\t                }\n\t            },\n\t            destroy: {\n\t                /**\n\t                 * Destroys instance of FileUploader\n\t                 */\n\t\n\t                value: function destroy() {\n\t                    var _this = this;\n\t\n\t                    forEach(this._directives, function (key) {\n\t                        forEach(_this._directives[key], function (object) {\n\t                            object.destroy();\n\t                        });\n\t                    });\n\t                }\n\t            },\n\t            onAfterAddingAll: {\n\t                /**\n\t                 * Callback\n\t                 * @param {Array} fileItems\n\t                 */\n\t\n\t                value: function onAfterAddingAll(fileItems) {}\n\t            },\n\t            onAfterAddingFile: {\n\t                /**\n\t                 * Callback\n\t                 * @param {FileItem} fileItem\n\t                 */\n\t\n\t                value: function onAfterAddingFile(fileItem) {}\n\t            },\n\t            onWhenAddingFileFailed: {\n\t                /**\n\t                 * Callback\n\t                 * @param {File|Object} item\n\t                 * @param {Object} filter\n\t                 * @param {Object} options\n\t                 */\n\t\n\t                value: function onWhenAddingFileFailed(item, filter, options) {}\n\t            },\n\t            onBeforeUploadItem: {\n\t                /**\n\t                 * Callback\n\t                 * @param {FileItem} fileItem\n\t                 */\n\t\n\t                value: function onBeforeUploadItem(fileItem) {}\n\t            },\n\t            onProgressItem: {\n\t                /**\n\t                 * Callback\n\t                 * @param {FileItem} fileItem\n\t                 * @param {Number} progress\n\t                 */\n\t\n\t                value: function onProgressItem(fileItem, progress) {}\n\t            },\n\t            onProgressAll: {\n\t                /**\n\t                 * Callback\n\t                 * @param {Number} progress\n\t                 */\n\t\n\t                value: function onProgressAll(progress) {}\n\t            },\n\t            onSuccessItem: {\n\t                /**\n\t                 * Callback\n\t                 * @param {FileItem} item\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 */\n\t\n\t                value: function onSuccessItem(item, response, status, headers) {}\n\t            },\n\t            onErrorItem: {\n\t                /**\n\t                 * Callback\n\t                 * @param {FileItem} item\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 */\n\t\n\t                value: function onErrorItem(item, response, status, headers) {}\n\t            },\n\t            onCancelItem: {\n\t                /**\n\t                 * Callback\n\t                 * @param {FileItem} item\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 */\n\t\n\t                value: function onCancelItem(item, response, status, headers) {}\n\t            },\n\t            onCompleteItem: {\n\t                /**\n\t                 * Callback\n\t                 * @param {FileItem} item\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 */\n\t\n\t                value: function onCompleteItem(item, response, status, headers) {}\n\t            },\n\t            onCompleteAll: {\n\t                /**\n\t                 * Callback\n\t                 */\n\t\n\t                value: function onCompleteAll() {}\n\t            },\n\t            _getTotalProgress: {\n\t                /**********************\n\t                 * PRIVATE\n\t                 **********************/\n\t                /**\n\t                 * Returns the total progress\n\t                 * @param {Number} [value]\n\t                 * @returns {Number}\n\t                 * @private\n\t                 */\n\t\n\t                value: function _getTotalProgress(value) {\n\t                    if (this.removeAfterUpload) {\n\t                        return value || 0;\n\t                    }var notUploaded = this.getNotUploadedItems().length;\n\t                    var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n\t                    var ratio = 100 / this.queue.length;\n\t                    var current = (value || 0) * ratio / 100;\n\t\n\t                    return Math.round(uploaded * ratio + current);\n\t                }\n\t            },\n\t            _getFilters: {\n\t                /**\n\t                 * Returns array of filters\n\t                 * @param {Array<Function>|String} filters\n\t                 * @returns {Array<Function>}\n\t                 * @private\n\t                 */\n\t\n\t                value: function _getFilters(filters) {\n\t                    if (!filters) {\n\t                        return this.filters;\n\t                    }if (isArray(filters)) {\n\t                        return filters;\n\t                    }var names = filters.match(/[^\\s,]+/g);\n\t                    return this.filters.filter(function (filter) {\n\t                        return names.indexOf(filter.name) !== -1;\n\t                    });\n\t                }\n\t            },\n\t            _render: {\n\t                /**\n\t                 * Updates html\n\t                 * @private\n\t                 */\n\t\n\t                value: function _render() {\n\t                    if (!$rootScope.$$phase) $rootScope.$apply();\n\t                }\n\t            },\n\t            _folderFilter: {\n\t                /**\n\t                 * Returns \"true\" if item is a file (not folder)\n\t                 * @param {File|FileLikeObject} item\n\t                 * @returns {Boolean}\n\t                 * @private\n\t                 */\n\t\n\t                value: function _folderFilter(item) {\n\t                    return !!(item.size || item.type);\n\t                }\n\t            },\n\t            _queueLimitFilter: {\n\t                /**\n\t                 * Returns \"true\" if the limit has not been reached\n\t                 * @returns {Boolean}\n\t                 * @private\n\t                 */\n\t\n\t                value: function _queueLimitFilter() {\n\t                    return this.queue.length < this.queueLimit;\n\t                }\n\t            },\n\t            _isValidFile: {\n\t                /**\n\t                 * Returns \"true\" if file pass all filters\n\t                 * @param {File|Object} file\n\t                 * @param {Array<Function>} filters\n\t                 * @param {Object} options\n\t                 * @returns {Boolean}\n\t                 * @private\n\t                 */\n\t\n\t                value: function _isValidFile(file, filters, options) {\n\t                    var _this = this;\n\t\n\t                    this._failFilterIndex = -1;\n\t                    return !filters.length ? true : filters.every(function (filter) {\n\t                        _this._failFilterIndex++;\n\t                        return filter.fn.call(_this, file, options);\n\t                    });\n\t                }\n\t            },\n\t            _isSuccessCode: {\n\t                /**\n\t                 * Checks whether upload successful\n\t                 * @param {Number} status\n\t                 * @returns {Boolean}\n\t                 * @private\n\t                 */\n\t\n\t                value: function _isSuccessCode(status) {\n\t                    return status >= 200 && status < 300 || status === 304;\n\t                }\n\t            },\n\t            _transformResponse: {\n\t                /**\n\t                 * Transforms the server response\n\t                 * @param {*} response\n\t                 * @param {Object} headers\n\t                 * @returns {*}\n\t                 * @private\n\t                 */\n\t\n\t                value: function _transformResponse(response, headers) {\n\t                    var headersGetter = this._headersGetter(headers);\n\t                    forEach($http.defaults.transformResponse, function (transformFn) {\n\t                        response = transformFn(response, headersGetter);\n\t                    });\n\t                    return response;\n\t                }\n\t            },\n\t            _parseHeaders: {\n\t                /**\n\t                 * Parsed response headers\n\t                 * @param headers\n\t                 * @returns {Object}\n\t                 * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n\t                 * @private\n\t                 */\n\t\n\t                value: function _parseHeaders(headers) {\n\t                    var parsed = {},\n\t                        key,\n\t                        val,\n\t                        i;\n\t\n\t                    if (!headers) {\n\t                        return parsed;\n\t                    }forEach(headers.split(\"\\n\"), function (line) {\n\t                        i = line.indexOf(\":\");\n\t                        key = line.slice(0, i).trim().toLowerCase();\n\t                        val = line.slice(i + 1).trim();\n\t\n\t                        if (key) {\n\t                            parsed[key] = parsed[key] ? parsed[key] + \", \" + val : val;\n\t                        }\n\t                    });\n\t\n\t                    return parsed;\n\t                }\n\t            },\n\t            _headersGetter: {\n\t                /**\n\t                 * Returns function that returns headers\n\t                 * @param {Object} parsedHeaders\n\t                 * @returns {Function}\n\t                 * @private\n\t                 */\n\t\n\t                value: function _headersGetter(parsedHeaders) {\n\t                    return function (name) {\n\t                        if (name) {\n\t                            return parsedHeaders[name.toLowerCase()] || null;\n\t                        }\n\t                        return parsedHeaders;\n\t                    };\n\t                }\n\t            },\n\t            _xhrTransport: {\n\t                /**\n\t                 * The XMLHttpRequest transport\n\t                 * @param {FileItem} item\n\t                 * @private\n\t                 */\n\t\n\t                value: function _xhrTransport(item) {\n\t                    var _this = this;\n\t\n\t                    var xhr = item._xhr = new XMLHttpRequest();\n\t                    var form = new FormData();\n\t\n\t                    this._onBeforeUploadItem(item);\n\t\n\t                    forEach(item.formData, function (obj) {\n\t                        forEach(obj, function (value, key) {\n\t                            form.append(key, value);\n\t                        });\n\t                    });\n\t\n\t                    if (typeof item._file.size != \"number\") {\n\t                        throw new TypeError(\"The file specified is no longer valid\");\n\t                    }\n\t\n\t                    form.append(item.alias, item._file, item.file.name);\n\t\n\t                    xhr.upload.onprogress = function (event) {\n\t                        var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\t                        _this._onProgressItem(item, progress);\n\t                    };\n\t\n\t                    xhr.onload = function () {\n\t                        var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n\t                        var response = _this._transformResponse(xhr.response, headers);\n\t                        var gist = _this._isSuccessCode(xhr.status) ? \"Success\" : \"Error\";\n\t                        var method = \"_on\" + gist + \"Item\";\n\t                        _this[method](item, response, xhr.status, headers);\n\t                        _this._onCompleteItem(item, response, xhr.status, headers);\n\t                    };\n\t\n\t                    xhr.onerror = function () {\n\t                        var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n\t                        var response = _this._transformResponse(xhr.response, headers);\n\t                        _this._onErrorItem(item, response, xhr.status, headers);\n\t                        _this._onCompleteItem(item, response, xhr.status, headers);\n\t                    };\n\t\n\t                    xhr.onabort = function () {\n\t                        var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n\t                        var response = _this._transformResponse(xhr.response, headers);\n\t                        _this._onCancelItem(item, response, xhr.status, headers);\n\t                        _this._onCompleteItem(item, response, xhr.status, headers);\n\t                    };\n\t\n\t                    xhr.open(item.method, item.url, true);\n\t\n\t                    xhr.withCredentials = item.withCredentials;\n\t\n\t                    forEach(item.headers, function (value, name) {\n\t                        xhr.setRequestHeader(name, value);\n\t                    });\n\t\n\t                    xhr.send(form);\n\t                    this._render();\n\t                }\n\t            },\n\t            _iframeTransport: {\n\t                /**\n\t                 * The IFrame transport\n\t                 * @param {FileItem} item\n\t                 * @private\n\t                 */\n\t\n\t                value: function _iframeTransport(item) {\n\t                    var _this = this;\n\t\n\t                    var form = element(\"<form style=\\\"display: none;\\\" />\");\n\t                    var iframe = element(\"<iframe name=\\\"iframeTransport\" + Date.now() + \"\\\">\");\n\t                    var input = item._input;\n\t\n\t                    if (item._form) item._form.replaceWith(input); // remove old form\n\t                    item._form = form; // save link to new form\n\t\n\t                    this._onBeforeUploadItem(item);\n\t\n\t                    input.prop(\"name\", item.alias);\n\t\n\t                    forEach(item.formData, function (obj) {\n\t                        forEach(obj, function (value, key) {\n\t                            var element_ = element(\"<input type=\\\"hidden\\\" name=\\\"\" + key + \"\\\" />\");\n\t                            element_.val(value);\n\t                            form.append(element_);\n\t                        });\n\t                    });\n\t\n\t                    form.prop({\n\t                        action: item.url,\n\t                        method: \"POST\",\n\t                        target: iframe.prop(\"name\"),\n\t                        enctype: \"multipart/form-data\",\n\t                        encoding: \"multipart/form-data\" // old IE\n\t                    });\n\t\n\t                    iframe.bind(\"load\", function () {\n\t                        var html = \"\";\n\t                        var status = 200;\n\t\n\t                        try {\n\t                            // Fix for legacy IE browsers that loads internal error page\n\t                            // when failed WS response received. In consequence iframe\n\t                            // content access denied error is thrown becouse trying to\n\t                            // access cross domain page. When such thing occurs notifying\n\t                            // with empty response object. See more info at:\n\t                            // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n\t                            // Note that if non standard 4xx or 5xx error code returned\n\t                            // from WS then response content can be accessed without error\n\t                            // but 'XHR' status becomes 200. In order to avoid confusion\n\t                            // returning response via same 'success' event handler.\n\t\n\t                            // fixed angular.contents() for iframes\n\t                            html = iframe[0].contentDocument.body.innerHTML;\n\t                        } catch (e) {\n\t                            // in case we run into the access-is-denied error or we have another error on the server side\n\t                            // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n\t                            status = 500;\n\t                        }\n\t\n\t                        var xhr = { response: html, status: status, dummy: true };\n\t                        var headers = {};\n\t                        var response = _this._transformResponse(xhr.response, headers);\n\t\n\t                        _this._onSuccessItem(item, response, xhr.status, headers);\n\t                        _this._onCompleteItem(item, response, xhr.status, headers);\n\t                    });\n\t\n\t                    form.abort = function () {\n\t                        var xhr = { status: 0, dummy: true };\n\t                        var headers = {};\n\t                        var response;\n\t\n\t                        iframe.unbind(\"load\").prop(\"src\", \"javascript:false;\");\n\t                        form.replaceWith(input);\n\t\n\t                        _this._onCancelItem(item, response, xhr.status, headers);\n\t                        _this._onCompleteItem(item, response, xhr.status, headers);\n\t                    };\n\t\n\t                    input.after(form);\n\t                    form.append(input).append(iframe);\n\t\n\t                    form[0].submit();\n\t                    this._render();\n\t                }\n\t            },\n\t            _onWhenAddingFileFailed: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {File|Object} item\n\t                 * @param {Object} filter\n\t                 * @param {Object} options\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onWhenAddingFileFailed(item, filter, options) {\n\t                    this.onWhenAddingFileFailed(item, filter, options);\n\t                }\n\t            },\n\t            _onAfterAddingFile: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {FileItem} item\n\t                 */\n\t\n\t                value: function _onAfterAddingFile(item) {\n\t                    this.onAfterAddingFile(item);\n\t                }\n\t            },\n\t            _onAfterAddingAll: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {Array<FileItem>} items\n\t                 */\n\t\n\t                value: function _onAfterAddingAll(items) {\n\t                    this.onAfterAddingAll(items);\n\t                }\n\t            },\n\t            _onBeforeUploadItem: {\n\t                /**\n\t                 *  Inner callback\n\t                 * @param {FileItem} item\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onBeforeUploadItem(item) {\n\t                    item._onBeforeUpload();\n\t                    this.onBeforeUploadItem(item);\n\t                }\n\t            },\n\t            _onProgressItem: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {FileItem} item\n\t                 * @param {Number} progress\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onProgressItem(item, progress) {\n\t                    var total = this._getTotalProgress(progress);\n\t                    this.progress = total;\n\t                    item._onProgress(progress);\n\t                    this.onProgressItem(item, progress);\n\t                    this.onProgressAll(total);\n\t                    this._render();\n\t                }\n\t            },\n\t            _onSuccessItem: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {FileItem} item\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onSuccessItem(item, response, status, headers) {\n\t                    item._onSuccess(response, status, headers);\n\t                    this.onSuccessItem(item, response, status, headers);\n\t                }\n\t            },\n\t            _onErrorItem: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {FileItem} item\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onErrorItem(item, response, status, headers) {\n\t                    item._onError(response, status, headers);\n\t                    this.onErrorItem(item, response, status, headers);\n\t                }\n\t            },\n\t            _onCancelItem: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {FileItem} item\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onCancelItem(item, response, status, headers) {\n\t                    item._onCancel(response, status, headers);\n\t                    this.onCancelItem(item, response, status, headers);\n\t                }\n\t            },\n\t            _onCompleteItem: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {FileItem} item\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onCompleteItem(item, response, status, headers) {\n\t                    item._onComplete(response, status, headers);\n\t                    this.onCompleteItem(item, response, status, headers);\n\t\n\t                    var nextItem = this.getReadyItems()[0];\n\t                    this.isUploading = false;\n\t\n\t                    if (isDefined(nextItem)) {\n\t                        nextItem.upload();\n\t                        return;\n\t                    }\n\t\n\t                    this.onCompleteAll();\n\t                    this.progress = this._getTotalProgress();\n\t                    this._render();\n\t                }\n\t            }\n\t        }, {\n\t            isFile: {\n\t                /**********************\n\t                 * STATIC\n\t                 **********************/\n\t                /**\n\t                 * Returns \"true\" if value an instance of File\n\t                 * @param {*} value\n\t                 * @returns {Boolean}\n\t                 * @private\n\t                 */\n\t\n\t                value: function isFile(value) {\n\t                    return File && value instanceof File;\n\t                }\n\t            },\n\t            isFileLikeObject: {\n\t                /**\n\t                 * Returns \"true\" if value an instance of FileLikeObject\n\t                 * @param {*} value\n\t                 * @returns {Boolean}\n\t                 * @private\n\t                 */\n\t\n\t                value: function isFileLikeObject(value) {\n\t                    return value instanceof FileLikeObject;\n\t                }\n\t            },\n\t            isArrayLikeObject: {\n\t                /**\n\t                 * Returns \"true\" if value is array like object\n\t                 * @param {*} value\n\t                 * @returns {Boolean}\n\t                 */\n\t\n\t                value: function isArrayLikeObject(value) {\n\t                    return isObject(value) && \"length\" in value;\n\t                }\n\t            },\n\t            inherit: {\n\t                /**\n\t                 * Inherits a target (Class_1) by a source (Class_2)\n\t                 * @param {Function} target\n\t                 * @param {Function} source\n\t                 */\n\t\n\t                value: function inherit(target, source) {\n\t                    target.prototype = Object.create(source.prototype);\n\t                    target.prototype.constructor = target;\n\t                    target.super_ = source;\n\t                }\n\t            }\n\t        });\n\t\n\t        return FileUploader;\n\t    })();\n\t\n\t    /**********************\n\t     * PUBLIC\n\t     **********************/\n\t    /**\n\t     * Checks a support the html5 uploader\n\t     * @returns {Boolean}\n\t     * @readonly\n\t     */\n\t    FileUploader.prototype.isHTML5 = !!(File && FormData);\n\t    /**********************\n\t     * STATIC\n\t     **********************/\n\t    /**\n\t     * @borrows FileUploader.prototype.isHTML5\n\t     */\n\t    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\t\n\t    return FileUploader;\n\t};\n\t\n\tmodule.exports.$inject = [\"fileUploaderOptions\", \"$rootScope\", \"$http\", \"$window\", \"FileLikeObject\", \"FileItem\"];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tvar copy = angular.copy;\n\tvar isElement = angular.isElement;\n\tvar isString = angular.isString;\n\t\n\tmodule.exports = function () {\n\t    var FileLikeObject = (function () {\n\t        /**\n\t         * Creates an instance of FileLikeObject\n\t         * @param {File|HTMLInputElement|Object} fileOrInput\n\t         * @constructor\n\t         */\n\t\n\t        function FileLikeObject(fileOrInput) {\n\t            _classCallCheck(this, FileLikeObject);\n\t\n\t            var isInput = isElement(fileOrInput);\n\t            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n\t            var postfix = isString(fakePathOrObject) ? \"FakePath\" : \"Object\";\n\t            var method = \"_createFrom\" + postfix;\n\t            this[method](fakePathOrObject);\n\t        }\n\t\n\t        _createClass(FileLikeObject, {\n\t            _createFromFakePath: {\n\t                /**\n\t                 * Creates file like object from fake path string\n\t                 * @param {String} path\n\t                 * @private\n\t                 */\n\t\n\t                value: function _createFromFakePath(path) {\n\t                    this.lastModifiedDate = null;\n\t                    this.size = null;\n\t                    this.type = \"like/\" + path.slice(path.lastIndexOf(\".\") + 1).toLowerCase();\n\t                    this.name = path.slice(path.lastIndexOf(\"/\") + path.lastIndexOf(\"\\\\\") + 2);\n\t                }\n\t            },\n\t            _createFromObject: {\n\t                /**\n\t                 * Creates file like object from object\n\t                 * @param {File|FileLikeObject} object\n\t                 * @private\n\t                 */\n\t\n\t                value: function _createFromObject(object) {\n\t                    this.lastModifiedDate = copy(object.lastModifiedDate);\n\t                    this.size = object.size;\n\t                    this.type = object.type;\n\t                    this.name = object.name;\n\t                }\n\t            }\n\t        });\n\t\n\t        return FileLikeObject;\n\t    })();\n\t\n\t    return FileLikeObject;\n\t};\n\t\n\tmodule.exports.$inject = [];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tvar copy = angular.copy;\n\tvar extend = angular.extend;\n\tvar element = angular.element;\n\tvar isElement = angular.isElement;\n\t\n\tmodule.exports = function ($compile, FileLikeObject) {\n\t    var FileItem = (function () {\n\t        /**\n\t         * Creates an instance of FileItem\n\t         * @param {FileUploader} uploader\n\t         * @param {File|HTMLInputElement|Object} some\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileItem(uploader, some, options) {\n\t            _classCallCheck(this, FileItem);\n\t\n\t            var isInput = isElement(some);\n\t            var input = isInput ? element(some) : null;\n\t            var file = !isInput ? some : null;\n\t\n\t            extend(this, {\n\t                url: uploader.url,\n\t                alias: uploader.alias,\n\t                headers: copy(uploader.headers),\n\t                formData: copy(uploader.formData),\n\t                removeAfterUpload: uploader.removeAfterUpload,\n\t                withCredentials: uploader.withCredentials,\n\t                method: uploader.method\n\t            }, options, {\n\t                uploader: uploader,\n\t                file: new FileLikeObject(some),\n\t                isReady: false,\n\t                isUploading: false,\n\t                isUploaded: false,\n\t                isSuccess: false,\n\t                isCancel: false,\n\t                isError: false,\n\t                progress: 0,\n\t                index: null,\n\t                _file: file,\n\t                _input: input\n\t            });\n\t\n\t            if (input) this._replaceNode(input);\n\t        }\n\t\n\t        _createClass(FileItem, {\n\t            upload: {\n\t                /**********************\n\t                 * PUBLIC\n\t                 **********************/\n\t                /**\n\t                 * Uploads a FileItem\n\t                 */\n\t\n\t                value: function upload() {\n\t                    try {\n\t                        this.uploader.uploadItem(this);\n\t                    } catch (e) {\n\t                        this.uploader._onCompleteItem(this, \"\", 0, []);\n\t                        this.uploader._onErrorItem(this, \"\", 0, []);\n\t                    }\n\t                }\n\t            },\n\t            cancel: {\n\t                /**\n\t                 * Cancels uploading of FileItem\n\t                 */\n\t\n\t                value: function cancel() {\n\t                    this.uploader.cancelItem(this);\n\t                }\n\t            },\n\t            remove: {\n\t                /**\n\t                 * Removes a FileItem\n\t                 */\n\t\n\t                value: function remove() {\n\t                    this.uploader.removeFromQueue(this);\n\t                }\n\t            },\n\t            onBeforeUpload: {\n\t                /**\n\t                 * Callback\n\t                 * @private\n\t                 */\n\t\n\t                value: function onBeforeUpload() {}\n\t            },\n\t            onProgress: {\n\t                /**\n\t                 * Callback\n\t                 * @param {Number} progress\n\t                 * @private\n\t                 */\n\t\n\t                value: function onProgress(progress) {}\n\t            },\n\t            onSuccess: {\n\t                /**\n\t                 * Callback\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 */\n\t\n\t                value: function onSuccess(response, status, headers) {}\n\t            },\n\t            onError: {\n\t                /**\n\t                 * Callback\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 */\n\t\n\t                value: function onError(response, status, headers) {}\n\t            },\n\t            onCancel: {\n\t                /**\n\t                 * Callback\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 */\n\t\n\t                value: function onCancel(response, status, headers) {}\n\t            },\n\t            onComplete: {\n\t                /**\n\t                 * Callback\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 */\n\t\n\t                value: function onComplete(response, status, headers) {}\n\t            },\n\t            _onBeforeUpload: {\n\t                /**********************\n\t                 * PRIVATE\n\t                 **********************/\n\t                /**\n\t                 * Inner callback\n\t                 */\n\t\n\t                value: function _onBeforeUpload() {\n\t                    this.isReady = true;\n\t                    this.isUploading = true;\n\t                    this.isUploaded = false;\n\t                    this.isSuccess = false;\n\t                    this.isCancel = false;\n\t                    this.isError = false;\n\t                    this.progress = 0;\n\t                    this.onBeforeUpload();\n\t                }\n\t            },\n\t            _onProgress: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {Number} progress\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onProgress(progress) {\n\t                    this.progress = progress;\n\t                    this.onProgress(progress);\n\t                }\n\t            },\n\t            _onSuccess: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onSuccess(response, status, headers) {\n\t                    this.isReady = false;\n\t                    this.isUploading = false;\n\t                    this.isUploaded = true;\n\t                    this.isSuccess = true;\n\t                    this.isCancel = false;\n\t                    this.isError = false;\n\t                    this.progress = 100;\n\t                    this.index = null;\n\t                    this.onSuccess(response, status, headers);\n\t                }\n\t            },\n\t            _onError: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onError(response, status, headers) {\n\t                    this.isReady = false;\n\t                    this.isUploading = false;\n\t                    this.isUploaded = true;\n\t                    this.isSuccess = false;\n\t                    this.isCancel = false;\n\t                    this.isError = true;\n\t                    this.progress = 0;\n\t                    this.index = null;\n\t                    this.onError(response, status, headers);\n\t                }\n\t            },\n\t            _onCancel: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onCancel(response, status, headers) {\n\t                    this.isReady = false;\n\t                    this.isUploading = false;\n\t                    this.isUploaded = false;\n\t                    this.isSuccess = false;\n\t                    this.isCancel = true;\n\t                    this.isError = false;\n\t                    this.progress = 0;\n\t                    this.index = null;\n\t                    this.onCancel(response, status, headers);\n\t                }\n\t            },\n\t            _onComplete: {\n\t                /**\n\t                 * Inner callback\n\t                 * @param {*} response\n\t                 * @param {Number} status\n\t                 * @param {Object} headers\n\t                 * @private\n\t                 */\n\t\n\t                value: function _onComplete(response, status, headers) {\n\t                    this.onComplete(response, status, headers);\n\t                    if (this.removeAfterUpload) this.remove();\n\t                }\n\t            },\n\t            _destroy: {\n\t                /**\n\t                 * Destroys a FileItem\n\t                 */\n\t\n\t                value: function _destroy() {\n\t                    if (this._input) this._input.remove();\n\t                    if (this._form) this._form.remove();\n\t                    delete this._form;\n\t                    delete this._input;\n\t                }\n\t            },\n\t            _prepareToUploading: {\n\t                /**\n\t                 * Prepares to uploading\n\t                 * @private\n\t                 */\n\t\n\t                value: function _prepareToUploading() {\n\t                    this.index = this.index || ++this.uploader._nextIndex;\n\t                    this.isReady = true;\n\t                }\n\t            },\n\t            _replaceNode: {\n\t                /**\n\t                 * Replaces input element on his clone\n\t                 * @param {JQLite|jQuery} input\n\t                 * @private\n\t                 */\n\t\n\t                value: function _replaceNode(input) {\n\t                    var clone = $compile(input.clone())(input.scope());\n\t                    clone.prop(\"value\", null); // FF fix\n\t                    input.css(\"display\", \"none\");\n\t                    input.after(clone); // remove jquery dependency\n\t                }\n\t            }\n\t        });\n\t\n\t        return FileItem;\n\t    })();\n\t\n\t    return FileItem;\n\t};\n\t\n\tmodule.exports.$inject = [\"$compile\", \"FileLikeObject\"];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tvar extend = angular.extend;\n\t\n\tmodule.exports = function () {\n\t    var FileDirective = (function () {\n\t        /**\n\t         * Creates instance of {FileDirective} object\n\t         * @param {Object} options\n\t         * @param {Object} options.uploader\n\t         * @param {HTMLElement} options.element\n\t         * @param {Object} options.events\n\t         * @param {String} options.prop\n\t         * @constructor\n\t         */\n\t\n\t        function FileDirective(options) {\n\t            _classCallCheck(this, FileDirective);\n\t\n\t            extend(this, options);\n\t            this.uploader._directives[this.prop].push(this);\n\t            this._saveLinks();\n\t            this.bind();\n\t        }\n\t\n\t        _createClass(FileDirective, {\n\t            bind: {\n\t                /**\n\t                 * Binds events handles\n\t                 */\n\t\n\t                value: function bind() {\n\t                    for (var key in this.events) {\n\t                        var prop = this.events[key];\n\t                        this.element.bind(key, this[prop]);\n\t                    }\n\t                }\n\t            },\n\t            unbind: {\n\t                /**\n\t                 * Unbinds events handles\n\t                 */\n\t\n\t                value: function unbind() {\n\t                    for (var key in this.events) {\n\t                        this.element.unbind(key, this.events[key]);\n\t                    }\n\t                }\n\t            },\n\t            destroy: {\n\t                /**\n\t                 * Destroys directive\n\t                 */\n\t\n\t                value: function destroy() {\n\t                    var index = this.uploader._directives[this.prop].indexOf(this);\n\t                    this.uploader._directives[this.prop].splice(index, 1);\n\t                    this.unbind();\n\t                    // this.element = null;\n\t                }\n\t            },\n\t            _saveLinks: {\n\t                /**\n\t                 * Saves links to functions\n\t                 * @private\n\t                 */\n\t\n\t                value: function _saveLinks() {\n\t                    for (var key in this.events) {\n\t                        var prop = this.events[key];\n\t                        this[prop] = this[prop].bind(this);\n\t                    }\n\t                }\n\t            }\n\t        });\n\t\n\t        return FileDirective;\n\t    })();\n\t\n\t    /**\n\t     * Map of events\n\t     * @type {Object}\n\t     */\n\t    FileDirective.prototype.events = {};\n\t\n\t    return FileDirective;\n\t};\n\t\n\tmodule.exports.$inject = [];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\t\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tvar extend = angular.extend;\n\t\n\tmodule.exports = function (FileDirective) {\n\t    var FileSelect = (function (_FileDirective) {\n\t        /**\n\t         * Creates instance of {FileSelect} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileSelect(options) {\n\t            _classCallCheck(this, FileSelect);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: \"destroy\",\n\t                    change: \"onChange\"\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: \"select\"\n\t            });\n\t\n\t            _get(Object.getPrototypeOf(FileSelect.prototype), \"constructor\", this).call(this, extendedOptions);\n\t\n\t            if (!this.uploader.isHTML5) {\n\t                this.element.removeAttr(\"multiple\");\n\t            }\n\t            this.element.prop(\"value\", null); // FF fix\n\t        }\n\t\n\t        _inherits(FileSelect, _FileDirective);\n\t\n\t        _createClass(FileSelect, {\n\t            getOptions: {\n\t                /**\n\t                 * Returns options\n\t                 * @return {Object|undefined}\n\t                 */\n\t\n\t                value: function getOptions() {}\n\t            },\n\t            getFilters: {\n\t                /**\n\t                 * Returns filters\n\t                 * @return {Array<Function>|String|undefined}\n\t                 */\n\t\n\t                value: function getFilters() {}\n\t            },\n\t            isEmptyAfterSelection: {\n\t                /**\n\t                 * If returns \"true\" then HTMLInputElement will be cleared\n\t                 * @returns {Boolean}\n\t                 */\n\t\n\t                value: function isEmptyAfterSelection() {\n\t                    return !!this.element.attr(\"multiple\");\n\t                }\n\t            },\n\t            onChange: {\n\t                /**\n\t                 * Event handler\n\t                 */\n\t\n\t                value: function onChange() {\n\t                    var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n\t                    var options = this.getOptions();\n\t                    var filters = this.getFilters();\n\t\n\t                    if (!this.uploader.isHTML5) this.destroy();\n\t                    this.uploader.addToQueue(files, options, filters);\n\t                    if (this.isEmptyAfterSelection()) {\n\t                        this.element.prop(\"value\", null);\n\t                        this.element.replaceWith(this.element = this.element.clone(true)); // IE fix\n\t                    }\n\t                }\n\t            }\n\t        });\n\t\n\t        return FileSelect;\n\t    })(FileDirective);\n\t\n\t    return FileSelect;\n\t};\n\t\n\tmodule.exports.$inject = [\"FileDirective\"];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\t\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tvar extend = angular.extend;\n\tvar forEach = angular.forEach;\n\t\n\tmodule.exports = function (FileDirective) {\n\t    var FileDrop = (function (_FileDirective) {\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileDrop(options) {\n\t            _classCallCheck(this, FileDrop);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: \"destroy\",\n\t                    drop: \"onDrop\",\n\t                    dragover: \"onDragOver\",\n\t                    dragleave: \"onDragLeave\"\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: \"drop\"\n\t            });\n\t\n\t            _get(Object.getPrototypeOf(FileDrop.prototype), \"constructor\", this).call(this, extendedOptions);\n\t        }\n\t\n\t        _inherits(FileDrop, _FileDirective);\n\t\n\t        _createClass(FileDrop, {\n\t            getOptions: {\n\t                /**\n\t                 * Returns options\n\t                 * @return {Object|undefined}\n\t                 */\n\t\n\t                value: function getOptions() {}\n\t            },\n\t            getFilters: {\n\t                /**\n\t                 * Returns filters\n\t                 * @return {Array<Function>|String|undefined}\n\t                 */\n\t\n\t                value: function getFilters() {}\n\t            },\n\t            onDrop: {\n\t                /**\n\t                 * Event handler\n\t                 */\n\t\n\t                value: function onDrop(event) {\n\t                    var transfer = this._getTransfer(event);\n\t                    if (!transfer) {\n\t                        return;\n\t                    }var options = this.getOptions();\n\t                    var filters = this.getFilters();\n\t                    this._preventAndStop(event);\n\t                    forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t                    this.uploader.addToQueue(transfer.files, options, filters);\n\t                }\n\t            },\n\t            onDragOver: {\n\t                /**\n\t                 * Event handler\n\t                 */\n\t\n\t                value: function onDragOver(event) {\n\t                    var transfer = this._getTransfer(event);\n\t                    if (!this._haveFiles(transfer.types)) {\n\t                        return;\n\t                    }transfer.dropEffect = \"copy\";\n\t                    this._preventAndStop(event);\n\t                    forEach(this.uploader._directives.over, this._addOverClass, this);\n\t                }\n\t            },\n\t            onDragLeave: {\n\t                /**\n\t                 * Event handler\n\t                 */\n\t\n\t                value: function onDragLeave(event) {\n\t                    if (event.currentTarget === this.element[0]) {\n\t                        return;\n\t                    }this._preventAndStop(event);\n\t                    forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t                }\n\t            },\n\t            _getTransfer: {\n\t                /**\n\t                 * Helper\n\t                 */\n\t\n\t                value: function _getTransfer(event) {\n\t                    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n\t                }\n\t            },\n\t            _preventAndStop: {\n\t                /**\n\t                 * Helper\n\t                 */\n\t\n\t                value: function _preventAndStop(event) {\n\t                    event.preventDefault();\n\t                    event.stopPropagation();\n\t                }\n\t            },\n\t            _haveFiles: {\n\t                /**\n\t                 * Returns \"true\" if types contains files\n\t                 * @param {Object} types\n\t                 */\n\t\n\t                value: function _haveFiles(types) {\n\t                    if (!types) {\n\t                        return false;\n\t                    }if (types.indexOf) {\n\t                        return types.indexOf(\"Files\") !== -1;\n\t                    } else if (types.contains) {\n\t                        return types.contains(\"Files\");\n\t                    } else {\n\t                        return false;\n\t                    }\n\t                }\n\t            },\n\t            _addOverClass: {\n\t                /**\n\t                 * Callback\n\t                 */\n\t\n\t                value: function _addOverClass(item) {\n\t                    item.addOverClass();\n\t                }\n\t            },\n\t            _removeOverClass: {\n\t                /**\n\t                 * Callback\n\t                 */\n\t\n\t                value: function _removeOverClass(item) {\n\t                    item.removeOverClass();\n\t                }\n\t            }\n\t        });\n\t\n\t        return FileDrop;\n\t    })(FileDirective);\n\t\n\t    return FileDrop;\n\t};\n\t\n\tmodule.exports.$inject = [\"FileDirective\"];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _inherits = function (subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\t\n\tvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tvar extend = angular.extend;\n\t\n\tmodule.exports = function (FileDirective) {\n\t    var FileOver = (function (_FileDirective) {\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileOver(options) {\n\t            _classCallCheck(this, FileOver);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: \"destroy\"\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: \"over\",\n\t                // Over class\n\t                overClass: \"nv-file-over\"\n\t            });\n\t\n\t            _get(Object.getPrototypeOf(FileOver.prototype), \"constructor\", this).call(this, extendedOptions);\n\t        }\n\t\n\t        _inherits(FileOver, _FileDirective);\n\t\n\t        _createClass(FileOver, {\n\t            addOverClass: {\n\t                /**\n\t                 * Adds over class\n\t                 */\n\t\n\t                value: function addOverClass() {\n\t                    this.element.addClass(this.getOverClass());\n\t                }\n\t            },\n\t            removeOverClass: {\n\t                /**\n\t                 * Removes over class\n\t                 */\n\t\n\t                value: function removeOverClass() {\n\t                    this.element.removeClass(this.getOverClass());\n\t                }\n\t            },\n\t            getOverClass: {\n\t                /**\n\t                 * Returns over class\n\t                 * @returns {String}\n\t                 */\n\t\n\t                value: function getOverClass() {\n\t                    return this.overClass;\n\t                }\n\t            }\n\t        });\n\t\n\t        return FileOver;\n\t    })(FileDirective);\n\t\n\t    return FileOver;\n\t};\n\t\n\tmodule.exports.$inject = [\"FileDirective\"];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tmodule.exports = function ($parse, FileUploader, FileSelect) {\n\t\n\t    return {\n\t        link: function (scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError(\"\\\"Uploader\\\" must be an instance of FileUploader\");\n\t            }\n\t\n\t            var object = new FileSelect({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t};\n\t\n\tmodule.exports.$inject = [\"$parse\", \"FileUploader\", \"FileSelect\"];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tmodule.exports = function ($parse, FileUploader, FileDrop) {\n\t\n\t    return {\n\t        link: function (scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError(\"\\\"Uploader\\\" must be an instance of FileUploader\");\n\t            }\n\t\n\t            if (!uploader.isHTML5) return;\n\t\n\t            var object = new FileDrop({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t};\n\t\n\tmodule.exports.$inject = [\"$parse\", \"FileUploader\", \"FileDrop\"];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\t\n\tvar CONFIG = _interopRequire(__webpack_require__(1));\n\t\n\tmodule.exports = function (FileUploader, FileOver) {\n\t\n\t    return {\n\t        link: function (scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError(\"\\\"Uploader\\\" must be an instance of FileUploader\");\n\t            }\n\t\n\t            var object = new FileOver({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOverClass = function () {\n\t                return attributes.overClass || object.overClass;\n\t            };\n\t        }\n\t    };\n\t};\n\t\n\tmodule.exports.$inject = [\"FileUploader\", \"FileOver\"];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-file-upload.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 08938086fe384e75174a\n **/","'use strict';\n\n\nimport CONFIG from './config.json';\n\n\nimport options from './values/options'\n\n\nimport serviceFileUploader from './services/FileUploader';\nimport serviceFileLikeObject from './services/FileLikeObject';\nimport serviceFileItem from './services/FileItem';\nimport serviceFileDirective from './services/FileDirective';\nimport serviceFileSelect from './services/FileSelect';\nimport serviceFileDrop from './services/FileDrop';\nimport serviceFileOver from './services/FileOver';\n\n\nimport directiveFileSelect from './directives/FileSelect';\nimport directiveFileDrop from './directives/FileDrop';\nimport directiveFileOver from './directives/FileOver';\n\n\nangular\n    .module(CONFIG.name, [])\n    .value('fileUploaderOptions', options)\n    .factory('FileUploader', serviceFileUploader)\n    .factory('FileLikeObject', serviceFileLikeObject)\n    .factory('FileItem', serviceFileItem)\n    .factory('FileDirective', serviceFileDirective)\n    .factory('FileSelect', serviceFileSelect)\n    .factory('FileDrop', serviceFileDrop)\n    .factory('FileOver', serviceFileOver)\n    .directive('nvFileSelect', directiveFileSelect)\n    .directive('nvFileDrop', directiveFileDrop)\n    .directive('nvFileOver', directiveFileOver)\n    .run([\n        'FileUploader',\n        'FileLikeObject',\n        'FileItem',\n        'FileDirective',\n        'FileSelect',\n        'FileDrop',\n        'FileOver',\n        function(FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver) {\n            // only for compatibility\n            FileUploader.FileLikeObject = FileLikeObject;\n            FileUploader.FileItem = FileItem;\n            FileUploader.FileDirective = FileDirective;\n            FileUploader.FileSelect = FileSelect;\n            FileUploader.FileDrop = FileDrop;\n            FileUploader.FileOver = FileOver;\n        }\n    ]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = {\n\t\"name\": \"angularFileUpload\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config.json\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\n\nexport default {\n    url: '/',\n    alias: 'file',\n    headers: {},\n    queue: [],\n    progress: 0,\n    autoUpload: false,\n    removeAfterUpload: false,\n    method: 'POST',\n    filters: [],\n    formData: [],\n    queueLimit: Number.MAX_VALUE,\n    withCredentials: false\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/values/options.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    forEach,\n    isObject,\n    isNumber,\n    isDefined,\n    isArray,\n    element\n    } = angular;\n\n\nexport default (fileUploaderOptions, $rootScope, $http, $window, FileLikeObject, FileItem) => {\n    \n    \n    let {\n        File,\n        FormData\n        } = $window;\n    \n    \n    class FileUploader {\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Creates an instance of FileUploader\n         * @param {Object} [options]\n         * @constructor\n         */\n        constructor(options) {\n            var settings = copy(fileUploaderOptions);\n            \n            extend(this, settings, options, {\n                isUploading: false,\n                _nextIndex: 0,\n                _failFilterIndex: -1,\n                _directives: {select: [], drop: [], over: []}\n            });\n\n            // add default filters\n            this.filters.unshift({name: 'queueLimit', fn: this._queueLimitFilter});\n            this.filters.unshift({name: 'folder', fn: this._folderFilter});\n        }\n        /**\n         * Adds items to the queue\n         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n         * @param {Object} [options]\n         * @param {Array<Function>|String} filters\n         */\n        addToQueue(files, options, filters) {\n            var list = this.isArrayLikeObject(files) ? files: [files];\n            var arrayOfFilters = this._getFilters(filters);\n            var count = this.queue.length;\n            var addedFileItems = [];\n\n            forEach(list, (some /*{File|HTMLInputElement|Object}*/) => {\n                var temp = new FileLikeObject(some);\n\n                if (this._isValidFile(temp, arrayOfFilters, options)) {\n                    var fileItem = new FileItem(this, some, options);\n                    addedFileItems.push(fileItem);\n                    this.queue.push(fileItem);\n                    this._onAfterAddingFile(fileItem);\n                } else {\n                    var filter = arrayOfFilters[this._failFilterIndex];\n                    this._onWhenAddingFileFailed(temp, filter, options);\n                }\n            });\n\n            if(this.queue.length !== count) {\n                this._onAfterAddingAll(addedFileItems);\n                this.progress = this._getTotalProgress();\n            }\n\n            this._render();\n            if (this.autoUpload) this.uploadAll();\n        }\n        /**\n         * Remove items from the queue. Remove last: index = -1\n         * @param {FileItem|Number} value\n         */\n        removeFromQueue(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            if(item.isUploading) item.cancel();\n            this.queue.splice(index, 1);\n            item._destroy();\n            this.progress = this._getTotalProgress();\n        }\n        /**\n         * Clears the queue\n         */\n        clearQueue() {\n            while(this.queue.length) {\n                this.queue[0].remove();\n            }\n            this.progress = 0;\n        }\n        /**\n         * Uploads a item from the queue\n         * @param {FileItem|Number} value\n         */\n        uploadItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n            item._prepareToUploading();\n            if(this.isUploading) return;\n\n            this.isUploading = true;\n            this[transport](item);\n        }\n        /**\n         * Cancels uploading of item from the queue\n         * @param {FileItem|Number} value\n         */\n        cancelItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var prop = this.isHTML5 ? '_xhr' : '_form';\n            if(item && item.isUploading) item[prop].abort();\n        }\n        /**\n         * Uploads all not uploaded items of queue\n         */\n        uploadAll() {\n            var items = this.getNotUploadedItems().filter(item => !item.isUploading);\n            if(!items.length) return;\n\n            forEach(items, item => item._prepareToUploading());\n            items[0].upload();\n        }\n        /**\n         * Cancels all uploads\n         */\n        cancelAll() {\n            var items = this.getNotUploadedItems();\n            forEach(items, item => item.cancel());\n        }\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFile(value) {\n            return this.constructor.isFile(value);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFileLikeObject(value) {\n            return this.constructor.isFileLikeObject(value);\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        isArrayLikeObject(value) {\n            return this.constructor.isArrayLikeObject(value);\n        }\n        /**\n         * Returns a index of item from the queue\n         * @param {Item|Number} value\n         * @returns {Number}\n         */\n        getIndexOfItem(value) {\n            return isNumber(value) ? value : this.queue.indexOf(value);\n        }\n        /**\n         * Returns not uploaded items\n         * @returns {Array}\n         */\n        getNotUploadedItems() {\n            return this.queue.filter(item => !item.isUploaded);\n        }\n        /**\n         * Returns items ready for upload\n         * @returns {Array}\n         */\n        getReadyItems() {\n            return this.queue\n                .filter(item => (item.isReady && !item.isUploading))\n                .sort((item1, item2) => item1.index - item2.index);\n        }\n        /**\n         * Destroys instance of FileUploader\n         */\n        destroy() {\n            forEach(this._directives, (key) => {\n                forEach(this._directives[key], (object) => {\n                    object.destroy();\n                });\n            });\n        }\n        /**\n         * Callback\n         * @param {Array} fileItems\n         */\n        onAfterAddingAll(fileItems) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onAfterAddingFile(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         */\n        onWhenAddingFileFailed(item, filter, options) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onBeforeUploadItem(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         * @param {Number} progress\n         */\n        onProgressItem(fileItem, progress) {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         */\n        onProgressAll(progress) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccessItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onErrorItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancelItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCompleteItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         */\n        onCompleteAll() {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Returns the total progress\n         * @param {Number} [value]\n         * @returns {Number}\n         * @private\n         */\n        _getTotalProgress(value) {\n            if(this.removeAfterUpload) return value || 0;\n\n            var notUploaded = this.getNotUploadedItems().length;\n            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n            var ratio = 100 / this.queue.length;\n            var current = (value || 0) * ratio / 100;\n\n            return Math.round(uploaded * ratio + current);\n        }\n        /**\n         * Returns array of filters\n         * @param {Array<Function>|String} filters\n         * @returns {Array<Function>}\n         * @private\n         */\n        _getFilters(filters) {\n            if(!filters) return this.filters;\n            if(isArray(filters)) return filters;\n            var names = filters.match(/[^\\s,]+/g);\n            return this.filters\n                .filter(filter => names.indexOf(filter.name) !== -1);\n        }\n        /**\n         * Updates html\n         * @private\n         */\n        _render() {\n            if(!$rootScope.$$phase) $rootScope.$apply();\n        }\n        /**\n         * Returns \"true\" if item is a file (not folder)\n         * @param {File|FileLikeObject} item\n         * @returns {Boolean}\n         * @private\n         */\n        _folderFilter(item) {\n            return !!(item.size || item.type);\n        }\n        /**\n         * Returns \"true\" if the limit has not been reached\n         * @returns {Boolean}\n         * @private\n         */\n        _queueLimitFilter() {\n            return this.queue.length < this.queueLimit;\n        }\n        /**\n         * Returns \"true\" if file pass all filters\n         * @param {File|Object} file\n         * @param {Array<Function>} filters\n         * @param {Object} options\n         * @returns {Boolean}\n         * @private\n         */\n        _isValidFile(file, filters, options) {\n            this._failFilterIndex = -1;\n            return !filters.length ? true : filters.every((filter) => {\n                this._failFilterIndex++;\n                return filter.fn.call(this, file, options);\n            });\n        }\n        /**\n         * Checks whether upload successful\n         * @param {Number} status\n         * @returns {Boolean}\n         * @private\n         */\n        _isSuccessCode(status) {\n            return (status >= 200 && status < 300) || status === 304;\n        }\n        /**\n         * Transforms the server response\n         * @param {*} response\n         * @param {Object} headers\n         * @returns {*}\n         * @private\n         */\n        _transformResponse(response, headers) {\n            var headersGetter = this._headersGetter(headers);\n            forEach($http.defaults.transformResponse, (transformFn) => {\n                response = transformFn(response, headersGetter);\n            });\n            return response;\n        }\n        /**\n         * Parsed response headers\n         * @param headers\n         * @returns {Object}\n         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n         * @private\n         */\n        _parseHeaders(headers) {\n            var parsed = {}, key, val, i;\n\n            if(!headers) return parsed;\n\n            forEach(headers.split('\\n'), (line) => {\n                i = line.indexOf(':');\n                key = line.slice(0, i).trim().toLowerCase();\n                val = line.slice(i + 1).trim();\n\n                if(key) {\n                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n                }\n            });\n\n            return parsed;\n        }\n        /**\n         * Returns function that returns headers\n         * @param {Object} parsedHeaders\n         * @returns {Function}\n         * @private\n         */\n        _headersGetter(parsedHeaders) {\n            return (name) => {\n                if(name) {\n                    return parsedHeaders[name.toLowerCase()] || null;\n                }\n                return parsedHeaders;\n            };\n        }\n        /**\n         * The XMLHttpRequest transport\n         * @param {FileItem} item\n         * @private\n         */\n        _xhrTransport(item) {\n            var xhr = item._xhr = new XMLHttpRequest();\n            var form = new FormData();\n\n            this._onBeforeUploadItem(item);\n\n            forEach(item.formData, (obj) => {\n                forEach(obj, (value, key) => {\n                    form.append(key, value);\n                });\n            });\n\n            if(typeof(item._file.size) != 'number') {\n                throw new TypeError('The file specified is no longer valid');\n            }\n\n            form.append(item.alias, item._file, item.file.name);\n\n            xhr.upload.onprogress = (event) => {\n                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n                this._onProgressItem(item, progress);\n            };\n\n            xhr.onload = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                var gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n                var method = '_on' + gist + 'Item';\n                this[method](item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onerror = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onErrorItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onabort = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.open(item.method, item.url, true);\n\n            xhr.withCredentials = item.withCredentials;\n\n            forEach(item.headers, (value, name) => {\n                xhr.setRequestHeader(name, value);\n            });\n\n            xhr.send(form);\n            this._render();\n        }\n        /**\n         * The IFrame transport\n         * @param {FileItem} item\n         * @private\n         */\n        _iframeTransport(item) {\n            var form = element('<form style=\"display: none;\" />');\n            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n            var input = item._input;\n\n            if(item._form) item._form.replaceWith(input); // remove old form\n            item._form = form; // save link to new form\n\n            this._onBeforeUploadItem(item);\n\n            input.prop('name', item.alias);\n\n            forEach(item.formData, (obj) => {\n                forEach(obj, (value, key) => {\n                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n                    element_.val(value);\n                    form.append(element_);\n                });\n            });\n\n            form.prop({\n                action: item.url,\n                method: 'POST',\n                target: iframe.prop('name'),\n                enctype: 'multipart/form-data',\n                encoding: 'multipart/form-data' // old IE\n            });\n\n            iframe.bind('load', () => {\n                var html = '';\n                var status = 200;\n\n                try {\n                    // Fix for legacy IE browsers that loads internal error page\n                    // when failed WS response received. In consequence iframe\n                    // content access denied error is thrown becouse trying to\n                    // access cross domain page. When such thing occurs notifying\n                    // with empty response object. See more info at:\n                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n                    // Note that if non standard 4xx or 5xx error code returned\n                    // from WS then response content can be accessed without error\n                    // but 'XHR' status becomes 200. In order to avoid confusion\n                    // returning response via same 'success' event handler.\n\n                    // fixed angular.contents() for iframes\n                    html = iframe[0].contentDocument.body.innerHTML;\n                } catch(e) {\n                    // in case we run into the access-is-denied error or we have another error on the server side\n                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n                    status = 500;\n                }\n\n                var xhr = {response: html, status: status, dummy: true};\n                var headers = {};\n                var response = this._transformResponse(xhr.response, headers);\n\n                this._onSuccessItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            });\n\n            form.abort = () => {\n                var xhr = {status: 0, dummy: true};\n                var headers = {};\n                var response;\n\n                iframe.unbind('load').prop('src', 'javascript:false;');\n                form.replaceWith(input);\n\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            input.after(form);\n            form.append(input).append(iframe);\n\n            form[0].submit();\n            this._render();\n        }\n        /**\n         * Inner callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         * @private\n         */\n        _onWhenAddingFileFailed(item, filter, options) {\n            this.onWhenAddingFileFailed(item, filter, options);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         */\n        _onAfterAddingFile(item) {\n            this.onAfterAddingFile(item);\n        }\n        /**\n         * Inner callback\n         * @param {Array<FileItem>} items\n         */\n        _onAfterAddingAll(items) {\n            this.onAfterAddingAll(items);\n        }\n        /**\n         *  Inner callback\n         * @param {FileItem} item\n         * @private\n         */\n        _onBeforeUploadItem(item) {\n            item._onBeforeUpload();\n            this.onBeforeUploadItem(item);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {Number} progress\n         * @private\n         */\n        _onProgressItem(item, progress) {\n            var total = this._getTotalProgress(progress);\n            this.progress = total;\n            item._onProgress(progress);\n            this.onProgressItem(item, progress);\n            this.onProgressAll(total);\n            this._render();\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccessItem(item, response, status, headers) {\n            item._onSuccess(response, status, headers);\n            this.onSuccessItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onErrorItem(item, response, status, headers) {\n            item._onError(response, status, headers);\n            this.onErrorItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancelItem(item, response, status, headers) {\n            item._onCancel(response, status, headers);\n            this.onCancelItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCompleteItem(item, response, status, headers) {\n            item._onComplete(response, status, headers);\n            this.onCompleteItem(item, response, status, headers);\n\n            var nextItem = this.getReadyItems()[0];\n            this.isUploading = false;\n\n            if(isDefined(nextItem)) {\n                nextItem.upload();\n                return;\n            }\n\n            this.onCompleteAll();\n            this.progress = this._getTotalProgress();\n            this._render();\n        }\n        /**********************\n         * STATIC\n         **********************/\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFile(value) {\n            return (File && value instanceof File);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFileLikeObject(value) {\n            return value instanceof FileLikeObject;\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        static isArrayLikeObject(value) {\n            return (isObject(value) && 'length' in value);\n        }\n        /**\n         * Inherits a target (Class_1) by a source (Class_2)\n         * @param {Function} target\n         * @param {Function} source\n         */\n        static inherit(target, source) {\n            target.prototype = Object.create(source.prototype);\n            target.prototype.constructor = target;\n            target.super_ = source;\n        }\n    }\n\n\n    /**********************\n     * PUBLIC\n     **********************/\n    /**\n     * Checks a support the html5 uploader\n     * @returns {Boolean}\n     * @readonly\n     */\n    FileUploader.prototype.isHTML5 = !!(File && FormData);\n    /**********************\n     * STATIC\n     **********************/\n    /**\n     * @borrows FileUploader.prototype.isHTML5\n     */\n    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\n    \n    return FileUploader;\n}\n\n\nmodule.exports.$inject = [\n    'fileUploaderOptions', \n    '$rootScope', \n    '$http', \n    '$window',\n    'FileLikeObject',\n    'FileItem'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileUploader.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    isElement,\n    isString\n    } = angular;\n\n\nexport default () => {\n    \n    \n    class FileLikeObject {\n        /**\n         * Creates an instance of FileLikeObject\n         * @param {File|HTMLInputElement|Object} fileOrInput\n         * @constructor\n         */\n        constructor(fileOrInput) {\n            var isInput = isElement(fileOrInput);\n            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n            var method = '_createFrom' + postfix;\n            this[method](fakePathOrObject);\n        }\n        /**\n         * Creates file like object from fake path string\n         * @param {String} path\n         * @private\n         */\n        _createFromFakePath(path) {\n            this.lastModifiedDate = null;\n            this.size = null;\n            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n        }\n        /**\n         * Creates file like object from object\n         * @param {File|FileLikeObject} object\n         * @private\n         */\n        _createFromObject(object) {\n            this.lastModifiedDate = copy(object.lastModifiedDate);\n            this.size = object.size;\n            this.type = object.type;\n            this.name = object.name;\n        }\n    }\n    \n    \n    return FileLikeObject;\n}\n\n\nmodule.exports.$inject = [\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileLikeObject.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    element,\n    isElement\n    } = angular;\n\n\nexport default ($compile, FileLikeObject) => {\n    \n    \n    class FileItem {\n        /**\n         * Creates an instance of FileItem\n         * @param {FileUploader} uploader\n         * @param {File|HTMLInputElement|Object} some\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(uploader, some, options) {\n            var isInput = isElement(some);\n            var input = isInput ? element(some) : null;\n            var file = !isInput ? some : null;\n\n            extend(this, {\n                url: uploader.url,\n                alias: uploader.alias,\n                headers: copy(uploader.headers),\n                formData: copy(uploader.formData),\n                removeAfterUpload: uploader.removeAfterUpload,\n                withCredentials: uploader.withCredentials,\n                method: uploader.method\n            }, options, {\n                uploader: uploader,\n                file: new FileLikeObject(some),\n                isReady: false,\n                isUploading: false,\n                isUploaded: false,\n                isSuccess: false,\n                isCancel: false,\n                isError: false,\n                progress: 0,\n                index: null,\n                _file: file,\n                _input: input\n            });\n\n            if (input) this._replaceNode(input);\n        }\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Uploads a FileItem\n         */\n        upload() {\n            try {\n                this.uploader.uploadItem(this);\n            } catch(e) {\n                this.uploader._onCompleteItem(this, '', 0, []);\n                this.uploader._onErrorItem(this, '', 0, []);\n            }\n        }\n        /**\n         * Cancels uploading of FileItem\n         */\n        cancel() {\n            this.uploader.cancelItem(this);\n        }\n        /**\n         * Removes a FileItem\n         */\n        remove() {\n            this.uploader.removeFromQueue(this);\n        }\n        /**\n         * Callback\n         * @private\n         */\n        onBeforeUpload() {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         * @private\n         */\n        onProgress(progress) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccess(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onError(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancel(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onComplete(response, status, headers) {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Inner callback\n         */\n        _onBeforeUpload() {\n            this.isReady = true;\n            this.isUploading = true;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 0;\n            this.onBeforeUpload();\n        }\n        /**\n         * Inner callback\n         * @param {Number} progress\n         * @private\n         */\n        _onProgress(progress) {\n            this.progress = progress;\n            this.onProgress(progress);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccess(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = true;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 100;\n            this.index = null;\n            this.onSuccess(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onError(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = true;\n            this.progress = 0;\n            this.index = null;\n            this.onError(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancel(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = true;\n            this.isError = false;\n            this.progress = 0;\n            this.index = null;\n            this.onCancel(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onComplete(response, status, headers) {\n            this.onComplete(response, status, headers);\n            if(this.removeAfterUpload) this.remove();\n        }\n        /**\n         * Destroys a FileItem\n         */\n        _destroy() {\n            if(this._input) this._input.remove();\n            if(this._form) this._form.remove();\n            delete this._form;\n            delete this._input;\n        }\n        /**\n         * Prepares to uploading\n         * @private\n         */\n        _prepareToUploading() {\n            this.index = this.index || ++this.uploader._nextIndex;\n            this.isReady = true;\n        }\n        /**\n         * Replaces input element on his clone\n         * @param {JQLite|jQuery} input\n         * @private\n         */\n        _replaceNode(input) {\n            var clone = $compile(input.clone())(input.scope());\n            clone.prop('value', null); // FF fix\n            input.css('display', 'none');\n            input.after(clone); // remove jquery dependency\n        }\n\n    }\n    \n    \n    return FileItem;\n}\n\n\nmodule.exports.$inject = [\n    '$compile',\n    'FileLikeObject'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileItem.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default () => {\n\n\n    class FileDirective {\n        /**\n         * Creates instance of {FileDirective} object\n         * @param {Object} options\n         * @param {Object} options.uploader\n         * @param {HTMLElement} options.element\n         * @param {Object} options.events\n         * @param {String} options.prop\n         * @constructor\n         */\n        constructor(options) {\n            extend(this, options);\n            this.uploader._directives[this.prop].push(this);\n            this._saveLinks();\n            this.bind();\n        }\n        /**\n         * Binds events handles\n         */\n        bind() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this.element.bind(key, this[prop]);\n            }\n        }\n        /**\n         * Unbinds events handles\n         */\n        unbind() {\n            for(var key in this.events) {\n                this.element.unbind(key, this.events[key]);\n            }\n        }\n        /**\n         * Destroys directive\n         */\n        destroy() {\n            var index = this.uploader._directives[this.prop].indexOf(this);\n            this.uploader._directives[this.prop].splice(index, 1);\n            this.unbind();\n            // this.element = null;\n        }\n        /**\n         * Saves links to functions\n         * @private\n         */\n        _saveLinks() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this[prop] = this[prop].bind(this);\n            }\n        }\n    }\n\n\n    /**\n     * Map of events\n     * @type {Object}\n     */\n    FileDirective.prototype.events = {};\n\n\n    return FileDirective;\n}\n\n\nmodule.exports.$inject = [\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileDirective.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default (FileDirective) => {\n    \n    \n    class FileSelect extends FileDirective {\n        /**\n         * Creates instance of {FileSelect} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    change: 'onChange'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'select'\n            });\n            \n            super(extendedOptions);\n            \n            if(!this.uploader.isHTML5) {\n                this.element.removeAttr('multiple');\n            }\n            this.element.prop('value', null); // FF fix\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * If returns \"true\" then HTMLInputElement will be cleared\n         * @returns {Boolean}\n         */\n        isEmptyAfterSelection() {\n            return !!this.element.attr('multiple');\n        }\n        /**\n         * Event handler\n         */\n        onChange() {\n            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n            var options = this.getOptions();\n            var filters = this.getFilters();\n\n            if(!this.uploader.isHTML5) this.destroy();\n            this.uploader.addToQueue(files, options, filters);\n            if(this.isEmptyAfterSelection()) {\n                this.element.prop('value', null);\n                this.element.replaceWith(this.element = this.element.clone(true)); // IE fix\n            }\n        }\n    }\n    \n    \n    return FileSelect;\n}\n\n\nmodule.exports.$inject = [\n    'FileDirective'\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileSelect.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend,\n    forEach\n    } = angular;\n\n\nexport default (FileDirective) => {\n    \n    \n    class FileDrop extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    drop: 'onDrop',\n                    dragover: 'onDragOver',\n                    dragleave: 'onDragLeave'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'drop'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * Event handler\n         */\n        onDrop(event) {\n            var transfer = this._getTransfer(event);\n            if(!transfer) return;\n            var options = this.getOptions();\n            var filters = this.getFilters();\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n            this.uploader.addToQueue(transfer.files, options, filters);\n        }\n        /**\n         * Event handler\n         */\n        onDragOver(event) {\n            var transfer = this._getTransfer(event);\n            if(!this._haveFiles(transfer.types)) return;\n            transfer.dropEffect = 'copy';\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._addOverClass, this);\n        }\n        /**\n         * Event handler\n         */\n        onDragLeave(event) {\n            if(event.currentTarget === this.element[0]) return;\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n        }\n        /**\n         * Helper\n         */\n        _getTransfer(event) {\n            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n        }\n        /**\n         * Helper\n         */\n        _preventAndStop(event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        /**\n         * Returns \"true\" if types contains files\n         * @param {Object} types\n         */\n        _haveFiles(types) {\n            if(!types) return false;\n            if(types.indexOf) {\n                return types.indexOf('Files') !== -1;\n            } else if(types.contains) {\n                return types.contains('Files');\n            } else {\n                return false;\n            }\n        }\n        /**\n         * Callback\n         */\n        _addOverClass(item) {\n            item.addOverClass();\n        }\n        /**\n         * Callback\n         */\n        _removeOverClass(item) {\n            item.removeOverClass();\n        }\n    }\n    \n    \n    return FileDrop;\n}\n\n\nmodule.exports.$inject = [\n    'FileDirective'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileDrop.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default (FileDirective) => {\n    \n    \n    class FileOver extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'over',\n                // Over class\n                overClass: 'nv-file-over'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Adds over class\n         */\n        addOverClass() {\n            this.element.addClass(this.getOverClass());\n        }\n        /**\n         * Removes over class\n         */\n        removeOverClass() {\n            this.element.removeClass(this.getOverClass());\n        }\n        /**\n         * Returns over class\n         * @returns {String}\n         */\n        getOverClass() {\n            return this.overClass;\n        }\n    }\n    \n    \n    return FileOver;\n}\n\n\nmodule.exports.$inject = [\n    'FileDirective'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileOver.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default  ($parse, FileUploader, FileSelect) => {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileSelect({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\nmodule.exports.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileSelect'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileSelect.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default ($parse, FileUploader, FileDrop) => {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            if (!uploader.isHTML5) return;\n\n            var object = new FileDrop({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\nmodule.exports.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileDrop'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileDrop.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default (FileUploader, FileOver) => {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileOver({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOverClass = () => attributes.overClass || object.overClass;\n        }\n    };\n\n\n}\n\n\nmodule.exports.$inject = [\n    'FileUploader',\n    'FileOver'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileOver.js\n **/"],"sourceRoot":""}